# Generate and Deploy Docs and APIs to GitHub Pages.
name: Generate Docs and APIs

on:
  push:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java JDK
        uses: actions/setup-java@v3.13.0
        with:
          distribution: 'temurin'
          java-version: '8'

      - name: Install Maven Dependencies
        run: mvn dependency:resolve

      - name: Generate Docs
        run: mvn javadoc:javadoc -f pom.xml

      - name: Generate APIs
        run: mvn springdoc-openapi:generate -f pom.xml

      - name: Configure Git
        run: |
          git config user.email "loph3xertoi@gmail.com"
          git config user.name "Daw Loph"

      - name: Commit and Push docs and api to gh-pages Branch
        run: |
          ls
          ls target
          echo "-----tree----"
          tree
          git checkout --orphan gh-pages
          git rm -rf .
          mv ./target/site/docs ./docs
          git add ./docs
          git commit -m "Update Docs"
          git push origin gh-pages -f

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Upload Artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: './target/site/docs'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
